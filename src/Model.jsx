/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import {useFrame} from "@react-three/fiber";

export default function Model(props) {
    const ref1 = useRef()
    const { nodes, materials } = useGLTF("/model.gltf");
    useFrame(({clock}) => {
        ref1.current.rotation.y = Math.sin(clock.getElapsedTime());
        ref1.current.rotation.x = Math.sin(clock.getElapsedTime())*-0.02;
        ref1.current.rotation.z = Math.sin(clock.getElapsedTime())*-0.1;
        props.setColorEffect(Math.sin(clock.getElapsedTime()));
    });
    return (
        <group ref={ref1} position={props.position} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Wolf3D_Body.geometry}
                material={materials.Wolf3D_Body}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
                material={materials.Wolf3D_Outfit_Bottom}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Wolf3D_Teeth.geometry}
                material={materials.Wolf3D_Teeth}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
                material={materials.Wolf3D_Outfit_Footwear}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Wolf3D_Outfit_Top.geometry}
                material={materials.Wolf3D_Outfit_Top}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Wolf3D_Hair.geometry}
                material={materials.Wolf3D_Hair}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.EyeLeft.geometry}
                material={materials.Wolf3D_Eye}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.EyeRight.geometry}
                material={materials.Wolf3D_Eye}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.Wolf3D_Head.geometry}
                material={materials.Wolf3D_Skin}
            />
        </group>
    );
}

useGLTF.preload("/model.gltf");